# alembic/script.py.mako
"""initial migration

Revision ID: ad7bdd8b68f4
Revises: 
Create Date: 2025-01-06 12:13:56.394569

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ad7bdd8b68f4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('player_rankings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_name', sa.String(), nullable=True),
    sa.Column('twitter_handle', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_rankings_id'), 'player_rankings', ['id'], unique=False)
    op.create_index(op.f('ix_player_rankings_player_name'), 'player_rankings', ['player_name'], unique=False)
    op.create_index(op.f('ix_player_rankings_rank'), 'player_rankings', ['rank'], unique=False)
    op.create_index(op.f('ix_player_rankings_twitter_handle'), 'player_rankings', ['twitter_handle'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'HOST', 'SUPER_ADMIN', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('format', sa.Enum('SINGLE_ELIMINATION', 'DOUBLE_ELIMINATION', name='tournamentformat'), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('start_time', sa.String(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('team_size', sa.Integer(), nullable=True),
    sa.Column('max_teams', sa.Integer(), nullable=True),
    sa.Column('current_teams', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ONGOING', 'COMPLETED', 'CANCELLED', name='tournamentstatus'), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rules', sa.String(), nullable=True),
    sa.Column('bracket_config', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tournaments_id'), 'tournaments', ['id'], unique=False)
    op.create_index(op.f('ix_tournaments_name'), 'tournaments', ['name'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('seed', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_index(op.f('ix_teams_name'), 'teams', ['name'], unique=False)
    op.create_table('leaderboard_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaderboard_entries_id'), 'leaderboard_entries', ['id'], unique=False)
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('round', sa.Integer(), nullable=True),
    sa.Column('match_number', sa.Integer(), nullable=True),
    sa.Column('team1_id', sa.Integer(), nullable=True),
    sa.Column('team2_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('loser_id', sa.Integer(), nullable=True),
    sa.Column('next_match_id', sa.Integer(), nullable=True),
    sa.Column('bracket_position', sa.Integer(), nullable=True),
    sa.Column('has_bye', sa.Boolean(), nullable=True),
    sa.Column('round_name', sa.String(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['loser_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['next_match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['team1_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['team2_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tournament_id', 'round', 'match_number', name='unique_match_number_per_round')
    )
    op.create_index(op.f('ix_matches_id'), 'matches', ['id'], unique=False)
    op.create_table('team_player',
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('losers_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('round', sa.Integer(), nullable=True),
    sa.Column('match_number', sa.Integer(), nullable=True),
    sa.Column('team1_id', sa.Integer(), nullable=True),
    sa.Column('team2_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('next_match_id', sa.Integer(), nullable=True),
    sa.Column('dropped_from_match_id', sa.Integer(), nullable=True),
    sa.Column('team1_from_winners', sa.Boolean(), nullable=True),
    sa.Column('team1_winners_round', sa.Integer(), nullable=True),
    sa.Column('team1_winners_match_number', sa.Integer(), nullable=True),
    sa.Column('team2_from_winners', sa.Boolean(), nullable=True),
    sa.Column('team2_winners_round', sa.Integer(), nullable=True),
    sa.Column('team2_winners_match_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dropped_from_match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['next_match_id'], ['losers_matches.id'], ),
    sa.ForeignKeyConstraint(['team1_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['team2_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tournament_id', 'round', 'match_number', name='unique_losers_match_number_per_round')
    )
    op.create_index(op.f('ix_losers_matches_id'), 'losers_matches', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_losers_matches_id'), table_name='losers_matches')
    op.drop_table('losers_matches')
    op.drop_table('team_player')
    op.drop_index(op.f('ix_matches_id'), table_name='matches')
    op.drop_table('matches')
    op.drop_index(op.f('ix_leaderboard_entries_id'), table_name='leaderboard_entries')
    op.drop_table('leaderboard_entries')
    op.drop_index(op.f('ix_teams_name'), table_name='teams')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_tournaments_name'), table_name='tournaments')
    op.drop_index(op.f('ix_tournaments_id'), table_name='tournaments')
    op.drop_table('tournaments')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_player_rankings_twitter_handle'), table_name='player_rankings')
    op.drop_index(op.f('ix_player_rankings_rank'), table_name='player_rankings')
    op.drop_index(op.f('ix_player_rankings_player_name'), table_name='player_rankings')
    op.drop_index(op.f('ix_player_rankings_id'), table_name='player_rankings')
    op.drop_table('player_rankings')
    # ### end Alembic commands ###